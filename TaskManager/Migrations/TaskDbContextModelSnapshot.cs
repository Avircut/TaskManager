// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskManager.DAL.EF;

namespace TaskManager.Migrations
{
    [DbContext(typeof(TaskDbContext))]
    partial class TaskDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TaskManager.DAL.Models.Tasks", b =>
                {
                    b.Property<int>("TaskID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Executors")
                        .IsRequired();

                    b.Property<DateTime>("FactEndDate");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("ParentTaskID");

                    b.Property<DateTime>("PlannedEndDate");

                    b.Property<DateTime>("RegisterDate");

                    b.Property<string>("Status");

                    b.HasKey("TaskID");

                    b.ToTable("Tasks");

                    b.HasData(
                        new { TaskID = 1, Description = "Создать проект в Visual Studio на ASP.NET Core.", Executors = "Вячеслав Ломов", FactEndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "Создать приложение \"Планировщик задач\"", ParentTaskID = 0, PlannedEndDate = new DateTime(2021, 7, 29, 0, 0, 0, 0, DateTimeKind.Unspecified), RegisterDate = new DateTime(2021, 7, 22, 0, 0, 0, 0, DateTimeKind.Unspecified), Status = "Выполняется" },
                        new { TaskID = 2, Description = "Провести анализ технического задания и определить потенциальные методы решения задач", Executors = "Вячеслав Ломов, Google", FactEndDate = new DateTime(2021, 7, 24, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "Продумать структуру проекта", ParentTaskID = 1, PlannedEndDate = new DateTime(2021, 7, 23, 0, 0, 0, 0, DateTimeKind.Unspecified), RegisterDate = new DateTime(2021, 7, 22, 0, 0, 0, 0, DateTimeKind.Unspecified), Status = "Выполнено" },
                        new { TaskID = 3, Description = "Определиться с паттерном проектирования. Структурно разделить проект по слоям.", Executors = "Вячеслав Ломов", FactEndDate = new DateTime(2021, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "Реализовать каркас структуры", ParentTaskID = 1, PlannedEndDate = new DateTime(2021, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified), RegisterDate = new DateTime(2021, 7, 24, 0, 0, 0, 0, DateTimeKind.Unspecified), Status = "Выполнено" },
                        new { TaskID = 4, Description = "Реализовать базовые модели, интерфейсы, репозитории и контекст данных", Executors = "Вячеслав Ломов", FactEndDate = new DateTime(2021, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "Реализовать DAL", ParentTaskID = 1, PlannedEndDate = new DateTime(2021, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified), RegisterDate = new DateTime(2021, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified), Status = "Выполнено" },
                        new { TaskID = 5, Description = "По итогам тестового задания получить приглашение на собеседование и пройти его", Executors = "Вячеслав Ломов", FactEndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "Пройти собеседование", ParentTaskID = 0, PlannedEndDate = new DateTime(2021, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), RegisterDate = new DateTime(2021, 7, 26, 0, 0, 0, 0, DateTimeKind.Unspecified), Status = "Назначена" },
                        new { TaskID = 6, Description = "По итогам собеседования получить приглашение на прохождение стажировки", Executors = "Вячеслав Ломов", FactEndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "Пройти на стажировку и стать джуном", ParentTaskID = 0, PlannedEndDate = new DateTime(2021, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), RegisterDate = new DateTime(2021, 7, 26, 0, 0, 0, 0, DateTimeKind.Unspecified), Status = "Назначена" }
                    );
                });
#pragma warning restore 612, 618
        }
    }
}
